/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pantallas;

import static data.IDataConstants.CONN_STRING;
import java.lang.reflect.Array;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.sql.CallableStatement;
import javax.lang.model.util.Types;
import java.sql.SQLType;
import java.sql.Struct;
import javax.swing.JOptionPane;



/**
 *
 * @author diegomoramontes
 */
public class recoleccionResiduo extends javax.swing.JFrame {
    Connection con ;
    Statement st;

    /**
     * Creates new form recoleccionResiduo
     */
    public recoleccionResiduo() throws SQLException {
        initComponents();


        con = DriverManager.getConnection(CONN_STRING);
        st = con.createStatement();
                
        llenarCB();
    }
    
    public void llenarCB() throws SQLException{
         // llenar choice box de productores 
        
        ResultSet rs = st.executeQuery("EXEC nombresProductores ");
        while(rs.next()){
            cbProductor.addItem(rs.getString(1));
        }
        
        // llenar choice box de desechos
        
        rs = st.executeQuery("EXEC nombresTipoDesechos ");
        while(rs.next()){
            cbTipoDesecho.addItem(rs.getString(1));
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbProductor = new javax.swing.JComboBox<>();
        cbContratos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDesechos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        cbTipoDesecho = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPesoTotal = new javax.swing.JTextField();
        txtRecipientes = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDesechosAgregar = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtRecipientesRecibiendo = new javax.swing.JTextField();
        btnRecipientesRecibiendo = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRecipientesRecibiendo = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblRecipientesDando = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtRecipientesDando = new javax.swing.JTextField();
        btnRecipientesDando = new javax.swing.JButton();
        btnConfirmar = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnRecipientesRecibiendoEliminar = new javax.swing.JButton();
        btnRecipientesDandoEliminar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Productor");

        jLabel2.setText("Contrato procesando");

        cbProductor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {null}));
        cbProductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbProductorActionPerformed(evt);
            }
        });

        cbContratos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {null}));

        tblDesechos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo Desecho", "Peso Total (kg)", "Recipientes"
            }
        ));
        jScrollPane1.setViewportView(tblDesechos);

        jLabel3.setText("Tipo Desecho");

        cbTipoDesecho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {null}));

        jLabel4.setText("Recipientes");

        jLabel5.setText("Peso Total");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        tblDesechosAgregar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo Desecho", "Peso Total (kg)", "Recipientes"
            }
        ));
        jScrollPane2.setViewportView(tblDesechosAgregar);

        jLabel6.setText("# Recipiente");

        btnRecipientesRecibiendo.setText("Agregar");
        btnRecipientesRecibiendo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecipientesRecibiendoActionPerformed(evt);
            }
        });

        tblRecipientesRecibiendo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Recipientes Recibiendo"
            }
        ));
        jScrollPane3.setViewportView(tblRecipientesRecibiendo);

        tblRecipientesDando.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Recipientes Dando"
            }
        ));
        jScrollPane4.setViewportView(tblRecipientesDando);

        jLabel7.setText("# Recipiente");

        btnRecipientesDando.setText("Agregar");
        btnRecipientesDando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecipientesDandoActionPerformed(evt);
            }
        });

        btnConfirmar.setText("Confirmar Recolecci√≥n");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnRecipientesRecibiendoEliminar.setText("Eliminar");
        btnRecipientesRecibiendoEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecipientesRecibiendoEliminarActionPerformed(evt);
            }
        });

        btnRecipientesDandoEliminar.setText("Eliminar");
        btnRecipientesDandoEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecipientesDandoEliminarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eiminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(85, 85, 85)
                                                .addComponent(jLabel1))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(65, 65, 65)
                                                .addComponent(cbProductor, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(74, 74, 74)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cbContratos, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtRecipientesRecibiendo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(btnRecipientesRecibiendo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnRecipientesRecibiendoEliminar))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(206, 206, 206)
                                .addComponent(btnConsultar)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(192, 192, 192)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(35, 35, 35))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(44, 44, 44)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel7)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(txtRecipientesDando, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(btnRecipientesDando)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(btnRecipientesDandoEliminar)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(218, 218, 218)
                                                .addComponent(jLabel4))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(txtPesoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(84, 84, 84)
                                                    .addComponent(txtRecipientes, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(btnAgregar)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(btnEliminar)
                                                    .addGap(169, 169, 169)))
                                            .addComponent(cbTipoDesecho, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(182, 182, 182)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(490, 490, 490)
                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbTipoDesecho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRecipientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPesoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregar)
                            .addComponent(btnEliminar))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbProductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbContratos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(btnConsultar)
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRecipientesRecibiendo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRecipientesRecibiendo)
                            .addComponent(btnRecipientesRecibiendoEliminar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRecipientesDando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRecipientesDando)
                            .addComponent(btnRecipientesDandoEliminar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRecipientesRecibiendoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecipientesRecibiendoActionPerformed
        String recipiente = txtRecipientesRecibiendo.getText();
        
        if(recipiente != null){
            DefaultTableModel model = (DefaultTableModel) tblRecipientesRecibiendo.getModel();
            model.addRow(new Object[] {recipiente});
        }     
    }//GEN-LAST:event_btnRecipientesRecibiendoActionPerformed

    private void btnRecipientesDandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecipientesDandoActionPerformed
        String recipiente = txtRecipientesDando.getText();
        
        if(recipiente != null){
            DefaultTableModel model = (DefaultTableModel) tblRecipientesDando.getModel();
            model.addRow(new Object[] {recipiente});
        }
    }//GEN-LAST:event_btnRecipientesDandoActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
 
        DefaultTableModel model1 = (DefaultTableModel) tblRecipientesDando.getModel();
        StringBuilder sb = new StringBuilder("DECLARE @TVP1 IdsRecipientesType INSERT INTO @TVP1 SELECT idRecipiente FROM recipiente WHERE idRecipiente IN (");
        for (int i = 0; i < model1.getRowCount(); i++) {
            sb.append(model1.getValueAt(i, 0));
            if (i < model1.getRowCount() - 1) {
                sb.append(", ");
            }
        }
        sb.append(")  ");
        
        
        DefaultTableModel model2 = (DefaultTableModel) tblRecipientesRecibiendo.getModel();
         sb.append(" DECLARE @TVP2 IdsRecipientesType INSERT INTO @TVP2 SELECT idRecipiente FROM recipiente WHERE idRecipiente IN (");
        for (int i = 0; i < model2.getRowCount(); i++) {
            sb.append(model2.getValueAt(i, 0));
            if (i < model2.getRowCount() - 1) {
                sb.append(", ");
            }
        }
        sb.append(")  ");
        
        sb.append(" DECLARE @movimientos InfoMovimientoType INSERT INTO @movimientos (tipoDesecho, peso, recipientes) VALUES ");
        
        DefaultTableModel model3 = (DefaultTableModel) tblDesechosAgregar.getModel();
        for (int i = 0; i < model3.getRowCount(); i++) {
            sb.append("(");
            for (int j = 0; j < 3; j++) {
                Object value = model3.getValueAt(i, j);
                if (value instanceof String) {
                    sb.append("'" + value + "'");
                } else {
                    sb.append(value);
                }
                if (j < 3 - 1) {
                    sb.append(", ");
                }
            }
            sb.append(")");
            if (i < model3.getRowCount() - 1) {
                sb.append(", ");
            }
        }
        
        String query = sb.toString();   
        System.out.println(query + " EXEC RegistrarMovimiento @producerName = '"+cbProductor.getSelectedItem()+"', @index = " + cbContratos.getSelectedItem() + ", @recipientesDando = @TVP1, @recipientesRecibiendo = @TVP2, @info = @movimientos");
        
        try {
            ResultSet rs = st.executeQuery( query + " EXEC RegistrarMovimiento @producerName = '"+cbProductor.getSelectedItem()+"', @index = " + cbContratos.getSelectedItem() + ", @recipientesDando = @TVP1, @recipientesRecibiendo = @TVP2, @info = @movimientos");
            while(rs.next()){
                if(rs.getString(1).equals("1")){
                    JOptionPane.showMessageDialog(null, "Se logr√≥ registrar la recolecci√≥n exitosamente", "EXTIO", JOptionPane.INFORMATION_MESSAGE);
                }
                
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void cbProductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbProductorActionPerformed
            cbContratos.removeAllItems();

            ResultSet rs;
        try {
            rs = st.executeQuery("EXEC CountContractsForProducer @producerName = '" + cbProductor.getSelectedItem() + "'");
            while(rs.next()){
                for (int i = 1; i <= rs.getInt(1); i++) {
                    cbContratos.addItem(i + "");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(recoleccionResiduo.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cbProductorActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String desecho = (String) cbTipoDesecho.getSelectedItem();
        String pesoTotal = txtPesoTotal.getText();
        String recipientes = txtRecipientes.getText();
        
        if(desecho != null && pesoTotal != null && recipientes != null){
            DefaultTableModel model = (DefaultTableModel) tblDesechosAgregar.getModel();
            model.addRow(new Object[] {desecho, pesoTotal, recipientes});
        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        try {
            DefaultTableModel m = (DefaultTableModel)tblDesechos.getModel();
            m.setRowCount(0);
            Object rowData[] = new Object[3];
            
            ResultSet rs = st.executeQuery("EXEC GetContractForProducer @producerName = '"+ cbProductor.getSelectedItem()+"', @index = " + cbContratos.getSelectedItem());            
            while(rs.next()){
                rowData[0] = rs.getString(2);
                rowData[1] = rs.getDouble(3);
                rowData[2] = rs.getInt(4);
                
                m.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(recoleccionResiduo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnRecipientesDandoEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecipientesDandoEliminarActionPerformed
        String recipiente = txtRecipientesDando.getText();
        DefaultTableModel model = (DefaultTableModel) tblRecipientesDando.getModel();

        if(recipiente != null){
            Object columnIdValue = recipiente;
            for (int i = 0; i < model.getRowCount(); i++) {
                if (model.getValueAt(i, 0).equals(columnIdValue)) {
                    model.removeRow(i);
                }
            }
        }    
    }//GEN-LAST:event_btnRecipientesDandoEliminarActionPerformed

    private void btnRecipientesRecibiendoEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecipientesRecibiendoEliminarActionPerformed
        String recipiente = txtRecipientesRecibiendo.getText();
        DefaultTableModel model = (DefaultTableModel) tblRecipientesRecibiendo.getModel();

        if(recipiente != null){
            Object columnIdValue = recipiente;
            for (int i = 0; i < model.getRowCount(); i++) {
                if (model.getValueAt(i, 0).equals(columnIdValue)) {
                    model.removeRow(i);
                }
            }
        }    
    }//GEN-LAST:event_btnRecipientesRecibiendoEliminarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String desecho = (String) cbTipoDesecho.getSelectedItem();
            DefaultTableModel model = (DefaultTableModel) tblDesechosAgregar.getModel();

        if(desecho != null){
            Object columnIdValue = desecho;
            for (int i = 0; i < model.getRowCount(); i++) {
                if (model.getValueAt(i, 0).equals(columnIdValue)) {
                    model.removeRow(i);
                }
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(recoleccionResiduo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(recoleccionResiduo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(recoleccionResiduo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(recoleccionResiduo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new recoleccionResiduo().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(recoleccionResiduo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRecipientesDando;
    private javax.swing.JButton btnRecipientesDandoEliminar;
    private javax.swing.JButton btnRecipientesRecibiendo;
    private javax.swing.JButton btnRecipientesRecibiendoEliminar;
    private javax.swing.JComboBox<String> cbContratos;
    private javax.swing.JComboBox<String> cbProductor;
    private javax.swing.JComboBox<String> cbTipoDesecho;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tblDesechos;
    private javax.swing.JTable tblDesechosAgregar;
    private javax.swing.JTable tblRecipientesDando;
    private javax.swing.JTable tblRecipientesRecibiendo;
    private javax.swing.JTextField txtPesoTotal;
    private javax.swing.JTextField txtRecipientes;
    private javax.swing.JTextField txtRecipientesDando;
    private javax.swing.JTextField txtRecipientesRecibiendo;
    // End of variables declaration//GEN-END:variables
}
